name: RECOVERY

on:
  workflow_dispatch:
    inputs:
      RECOVERY_URL:
        description: 'RECOVERY URL (örnek: https://example.com/recovery.img.lz4)'
        required: true
        default: 'https://transfer.sh/(RECOMMENDED)'

env:
  RECOVERY_URL: https://oshi.at/Rpjg  # İstersen burada varsayılan URL kalabilir

jobs:
  build:
    runs-on: ubuntu-22.04   # Ubuntu 20.04 kullanımı kaldırıldı, güncel LTS

    steps:
    - name: Check out repository
      uses: actions/checkout@v3  # Güvenilir ve güncel checkout action

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt install -y git wget lz4 tar openssl python3  # Gerekli araçlar kuruldu

    - name: Fetch recovery image from URL
      run: |
        # Girdi olarak verilen URL'deki baştaki/sondaki boşluklar temizlenip dosya indiriliyor
        wget "$(echo "${{ github.event.inputs.RECOVERY_URL }}" | xargs)" -O recovery.img

    - name: Decompress recovery image if compressed (.lz4)
      run: |
        # Eğer URL ".lz4" ile bitiyorsa, lz4 kullanılarak açılır
        if [[ "${{ github.event.inputs.RECOVERY_URL }}" == *.lz4 ]]; then
          echo "Detected .lz4 compressed recovery image, decompressing..."
          lz4 -d recovery.img recovery.img.decompressed
          mv recovery.img.decompressed recovery.img
        else
          echo "No decompression needed."
        fi

    - name: Patch Process-1
      run: |
        # patch scripti ve magiskboot çalıştırılabilir hale getirilip çalıştırılıyor
        chmod +x script1.sh magiskboot
        ./script1.sh || true  # Hata verse bile devam eder

    - name: Patch Process-2
      run: |
        chmod +x script2.sh
        ./script2.sh || true

        # avbtool ile public key çıkarılıyor ve imaj imzalanıyor
        python3 avbtool extract_public_key --key phh.pem --output phh.pub.bin

        python3 avbtool add_hash_footer \
          --partition_name recovery \
          --partition_size $(wc -c recovery.img | cut -f1 -d ' ') \
          --image recovery-patched.img \
          --key phh.pem \
          --algorithm SHA256_RSA4096

        # Çıktılar düzenli klasöre taşınıyor
        mkdir output
        mv recovery-patched.img output/recovery.img

        # fastboot paketleniyor ve md5 dosyası oluşturuluyor
        cd output
        tar cvf fastbootd-recovery.tar recovery.img
        md5sum -t fastbootd-recovery.tar >> fastbootd-recovery.tar
        mv fastbootd-recovery.tar fastbootd-recovery.tar.md5

    - name: Upload patched recovery artifact
      uses: actions/upload-artifact@v4
      with:
        name: Patched-Recovery
        path: output/*.md5
